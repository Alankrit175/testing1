pip install Flask

from flask import Flask, request, jsonify
from flask_bcrypt import Bcrypt
from flask_jwt_extended import JWTManager, create_access_token, jwt_required, get_jwt_identity

app = Flask(__name__)
bcrypt = Bcrypt(app)
jwt = JWTManager(app)

# Replace this with your secret key in a production environment
app.config['JWT_SECRET_KEY'] = 'your-secret-key'

# Sample product catalog (for demonstration purposes)
products = [
    {"id": 1, "name": "Product 1", "price": 20.0},
    {"id": 2, "name": "Product 2", "price": 30.0},
    # Add more products as needed
]

# Sample user (for demonstration purposes)
users = [
    {"username": "user1", "password": bcrypt.generate_password_hash("password").decode("utf-8")},
]

@app.route('/login', methods=['POST'])
def login():
    data = request.get_json()

    username = data.get('username', None)
    password = data.get('password', None)

    if not username or not password:
        return jsonify({"message": "Missing username or password"}), 400

    user = next((user for user in users if user['username'] == username), None)

    if user and bcrypt.check_password_hash(user['password'], password):
        access_token = create_access_token(identity=username)
        return jsonify(access_token=access_token), 200
    else:
        return jsonify({"message": "Invalid username or password"}), 401

@app.route('/products', methods=['GET'])
@jwt_required()
def get_products():
    return jsonify({"products": products})

if __name__ == '__main__':
    app.run(debug=True)

# Run the server with 
  python app.py
